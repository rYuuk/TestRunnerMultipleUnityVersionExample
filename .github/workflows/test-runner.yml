name: Multiple Unity Test Example

on: push

jobs:
  runAllTestsOnUnity2019:
    name: ${{ matrix.unityVersion }} ${{ matrix.testMode }} tests 
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        testMode: 
#          - playmode
          - editmode
        unityVersion:
          - 2019.4.38f1
#          - 2020.3.37f1
#          - 2021.3.7f1
#          - 2022.1.12f1
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-
          restore-keys: |
            Library-
      - name: Tests 🛠️
        id: tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          testMode: ${{ matrix.testMode }}
          projectPath: ${{ matrix.projectPath }}
          checkName: ${{ matrix.unityVersion }} ${{ matrix.testMode }} tests result
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          customParameters: -debugCodeOptimization -enableCodeCoverage -coverageResultsPath ./CodeCoverage -coverageOptions "generateAdditionalMetrics;generateHtmlReport;generateBadgeReport"
      - run: echo ${{ steps.tests.outputs.coveragePath }}
      - run: ls -al
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}
      - name: Upload XML report to Codecov
        uses: codecov/codecov-action@v2
        with:
          name:  EditMode
          flags: automated
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./CodeCoverage/workspace-opencov/EditMode/TestCoverageResults_0000.xml
